// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    name      String?   @unique
    password  String
    image     String?
    Post      Post[]
    Like      Like[]
    Comment   Comment[]
    followers Follow[]  @relation("FollowFollower")
    following Follow[]  @relation("FollowFollowee")
}

model Post {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    content   String
    image     String
    user      User      @relation(fields: [userId], references: [id])
    userId    String    @db.ObjectId
    Like      Like[]
    Comment   Comment[]
    viewCount Int
    createdAt DateTime  @default(now())
}

model Like {
    id     String  @id @default(auto()) @map("_id") @db.ObjectId
    user   User    @relation(fields: [userId], references: [id])
    Post   Post?   @relation(fields: [postId], references: [id])
    postId String? @db.ObjectId
    userId String  @db.ObjectId

    @@unique([userId, postId])
}

model Comment {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    content   String
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @db.ObjectId
    post      Post     @relation(fields: [postId], references: [id])
    postId    String   @db.ObjectId
    image     String
    createdAt DateTime @default(now())
}

model Follow {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    follower  User     @relation("FollowFollower", fields: [followerId], references: [id])
    followee  User     @relation("FollowFollowee", fields: [followeeId], references: [id])

    followerId String @db.ObjectId
    followeeId String @db.ObjectId

    @@unique([followerId, followeeId])
}
